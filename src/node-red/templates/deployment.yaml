apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-helm-node-red.fullname" . }}
  labels:
    {{- include "k8s-helm-node-red.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "k8s-helm-node-red.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "k8s-helm-node-red.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "k8s-helm-node-red.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init-myservice
        image: node:18
        command: ["sh","-c","cp -n /config/*.* /data && cd /data && npm i && chmod 0777 /data -R "]
        volumeMounts:
        - name: config
          mountPath: /config
        - name: data
          mountPath: /data
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env: 
          volumeMounts:
            - name: data
              mountPath: /data
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ printf "/%s/%s" $.Release.Namespace  $.Release.Name }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ printf "/%s/%s" $.Release.Namespace  $.Release.Name }}
              port: http
          env:
            - name: BASE_URL
              value: "{{ printf "/%s/%s" $.Release.Namespace  $.Release.Name }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config  
          configMap:
            name: {{ .Release.Name }}-config
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include  "k8s-helm-node-red.fullname"  .) }}
          {{- else }}
          emptyDir: { }
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
